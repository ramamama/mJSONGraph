{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Mjsongraph","tagline":"a JSON + css engine to make graph","body":"# mJSONGraph.\r\nTarget : create svg Graph with JSON template et css sheets\r\nShortly: JSON data + mJSONGraph + cssStyle + JSONStyle --> svg Graph\r\n\r\n***\r\nObjectif: créer des représentations graphiques de données basées sur des modèles JSON.\r\n\r\nEn cours :  JSON data + mJSONGraph + cssStyle + JSONStyle --> une représentation graphique des données.\r\n\r\nmJSONGraph est développé en javascript avec Backbone pour la modélisation des objets et d3.js pour le rendu graphique. (d3.js doit à terme être remplacé par une bibliothèque propre à mJSONGraph)\r\n\r\nmJSONGraph est un jeune moteur de modèle, pour le moment seuls les graphismes sous formes d'histogrammes sont développer et encore de façon basique.\r\n\r\nA terme une application pour construire de nouveaux modèles doit être développer.\r\n\r\nLe tout est sous licence MIT.\r\n\r\n### Les objets de mJSONGraph sont structuré de la façon suivante:\r\nsvgHisto\r\n     svgBar \r\n         svgText --> Label\r\n         svgRect --> Graph ici rectangle\r\n         svgText --> Label\r\n\r\nComment construire un modèle JSON sous forme d'histogramme.\r\n```\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta charset=\"UTF-8\">\r\n<title>Index.html</title>\r\n<link rel=\"stylesheet\" href=\"css/svgDefault.css\" type=\"text/css\" />\r\n\r\n<style type='text/css'>\r\n<script type=\"text/javascript\" src=\"http://cdnjs.cloudflare.com/ajax/libs/headjs/0.96/head.min.js\"></script>\r\n<script language=\"javascript\">\r\nhead.js(\"http://cdnjs.cloudflare.com/ajax/libs/jquery/1.8.0/jquery-1.8.0.min.js\")\r\n\t.js(\"http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.3.3/underscore-min.js\")\r\n\t.js(\"http://cdnjs.cloudflare.com/ajax/libs/backbone.js/0.9.2/backbone-min.js\")\r\n\t.js(\"http://cdnjs.cloudflare.com/ajax/libs/d3/2.10.0/d3.v2.min.js\")\r\n\t.js(\"js/svgFunction.js\")\t\r\n\t.js(\"js/svgRect.js\")\t\t\r\n\t.js(\"js/svgText.js\")\r\n\t.js(\"js/svgBar.js\")\r\n\t.js(\"js/svgHisto.js\");\r\n\r\nhead.ready(function() {\r\n\t$(document).ready(function(){\r\n\t     //place pour le code\r\n\t});//end $document.ready\r\n});//end head\r\n</script>\r\n</head>\r\n<body>\r\n<div id=\"mglobal\">\r\n\t<div id=\"mleft\">Left</div>\r\n\t<div id=\"mright\">right</div>\r\n</div>\r\n</body>\r\n</html>\r\n\r\n```\r\n**L'utilisation des bibliothèques suivantes est nécessaire pour utiliser myGraphJSON:**\r\n* head --> pour télécharger les autres librairies de manière asynchrone\r\n* jquery --> pour vérifier le bon chargement de la page\r\n* underscore -->  car nécessaire à backbone\r\n* backbone --> pour modéliser les objets\r\n* d3.js --> pour afficher le svg\r\n* svgFunction.js\t --> bibliothèque de fonctions qui sont utilisées dans plusieurs objets myGraphJSON \r\n* svgRect.js \t--> description de l'objet svgRect\t\t\r\n* svgText.js \t--> description de l'objet svgText\r\n* svgBar.js\t--> description de l'objet svgBar\r\n* svgHisto.js\t--> description de l'objet svgHisto\r\n\r\nLa bibliothèque contient les objets suivants:\r\n## svgText\r\n### Structure de l'objet svgText\r\n\r\n**code:**\r\n```\r\n\tvar untext=new svgText_Model({\t\r\n\tid : \"texte1\",\r\n\ttext:\"Exemple de texte\",\r\n\tx: 10,\r\n\ty: 10,\r\n\tdx: 0,\r\n\tdy: 0,\r\n\ttransform:\"\",\r\n\tstyle:\"svgTextDefault\"\r\n\t});\r\n```\r\n**description:**\r\n* id : null, -->\tid de l'objet Text doit être définit ou est transmis par l'objet appelant\r\n* text:\"\", -->\ttexte qui sera affiché\r\n* x: 0, -->\tposition horizontale du texte\r\n* y: 0, -->\tposition verticale du texte\r\n* dx: 0, -->\tdécalage horizontal du texte\r\n* dy: 0, -->\tdécalage verticale du texte\r\n* style:\"svgTextDefault\"--> style par défaut du texte \r\n\t\r\n**Defaut css style:**\r\n```\r\n.svgTextDefault {font-family: Arial; font-size: 34; text-anchor: middle;}\r\n```\r\n###Rendu de l'objet svgText\r\n**code:**\r\n```\r\n\tvar afficheTxt=new svgText_ModelView({el: mtext, model: untext });\r\n```\r\n**description:**\r\n* el: -->\tsvg élément, où dessiner le texte\r\n* model: -->\tobjet model\r\n\r\n**Exemple:**\r\n```\r\n//on creer le code svg et on lui affecte id=mText1\r\nd3.select(\"#mleft\").append(\"svg\").attr(\"id\",\"mText1\");\r\n\t\r\n// on creer un objet svgText\r\nvar untext=new svgText_Model({\t\r\n\tid : \"texte1\",\r\n\ttext:\"Exemple de texte\",\r\n\tx: 10,\r\n\ty: 10,\r\n\tdx: 0,\r\n\tdy: 0,\r\n\ttransform:\"\",\r\n\tstyle:\"svgTextDefault\"\r\n\t});\r\n//on affiche l'objet untext à l'emplacement mText1\r\nvar afficheTxt=new svgText_ModelView({el: $(\"#mText1\"), model: untext });\r\n```\r\n \r\n## svgRect\r\n### Structure de l'objet svgRect\r\n**code:**\r\n```\r\nvar monRect=new svgRect_Model({\r\n\tid : \"monRect1\",\r\n\tx: 10,\r\n\ty: 10,\r\n\tw: 80,\r\n\th: 80,\r\n\tstyle:\"svgRectDefault\"\r\n\t});\r\n```\r\n**description:**\r\n* id : null, -->\tid de l'objet svgRect doit être définit ou est transmis par l'objet appelant\r\n* x: 0,-->\tposition horizontale du rectangle\r\n* y: 0,-->\tposition verticale du rectangle\r\n* w: 0,-->\tlargeur du rectangle\r\n* h: 0,-->\thauteur du rectangle\r\n* style:\" svgRectDefault \"\t--> style par défaut du rectangle\r\n\r\n**defaut css style:**\r\n```\r\n.svgRectDefault {fill: red; }\r\n```\r\n### Rendu de l'objet\r\n**code:**\r\n```\r\nvar afficheMonRect=new svgRect_ModelView({el: $(\"#RectE\"), model: monRect });\r\n```\t\r\n**description:**\r\n* el: -->\tsvg element, où dessiner le texte\r\n* model: -->\tobjet model\r\n\r\n**Exemple:**\r\n```\r\n//on creer le code svg et on lui affecte id= RectE\r\nd3.select(\"#mrect\").append(\"svg\").attr(\"id\",\"RectE\");\t\r\n\r\n// on creer un objet svgRect\r\nvar monRect=new svgRect_Model({\tid : \"monRect1\",\r\n\t\t\t\t\tx: 10,\r\n\t\t\t\t\ty: 10,\r\n\t\t\t\t\tw: 80,\r\n\t\t\t\t\th: 80,\r\n\t\t\t\t\tstyle:\"svgRectDefault\"\r\n\t\t\t\t\t});\r\n//on affiche l'objet monRect à l'emplacement RectE\r\nvar afficheMonRect=new svgRect_ModelView({el: $(\"#RectE\"), model: monRect });\r\n```\r\n\r\n \r\n## svgBar\r\n### Structure de l'objet svgBar\r\n**code:**\r\n```\r\nvar nBar=new svgBar_Model({\tid : \"testBar\", \r\n\t\t\t\ttype: \"jsBarTopBottom\",\r\n\t\t\t\tx: 10,\r\n\t\t\t\ty: 50,\r\n\t\t\t\tsize: 100,\r\n\t\t\t\tthickness: 50,\r\n\t\t\t\tsvgBar_label:  {\r\n\t\t\t\t\t\"text\":\"Label\",\r\n\t\t\t\t\t\"dx\": 0,\r\n\t\t\t\t\t\"dy\": 0\r\n\t\t\t\t},\r\n\t\t\t\tsvgBar_label_position: \"centerMiddle\",\r\n\t\t\t\tsvgBar_rect:  \t{ \t\r\n\t\t\t\t\t\"style\":\"cssdrawZone1\"\r\n\t\t\t\t},\r\n\t\t\t\tsvgBar_value:  {\r\n\t\t\t\t\ttext: 10,\r\n\t\t\t\t\t\"dx\": 0,\r\n\t\t\t\t\t\"dy\": -5\r\n\t\t\t\t},\r\n\t\t\t\tsvgBar_value_position: \"topMiddle\",\r\n\t\t});\r\n```\t\r\n**description:**\r\n* id : null, -->\tid de l'objet Bar doit être définit ou est transmis par l'objet appelant\r\n* type: \"\", -->\tjsBarLeftRight ou jsBarTopBottom\r\n* x: 0, -->\tposition horizontale de la bar\r\n* y: 0, -->\tposition verticale de la bar\r\n* size: 0, -->\tTaille de la Bar\r\n* thickness: 0, --> \tEpaisseur de la Bar\r\n* svgBar_rect: -->\tsvgRect objet ou structure JSON de svgRect \t\r\n* svgBar_label: -->\tsvgText objet ou structure JSON de svgText\r\n* svgBar_label_position: cf. position des textes par rapport à la forme centrale\r\n* svgBar_value: -->\tsvgText objet ou structure JSON de svgText\r\n* svgBar_value_position: cf. position des textes par rapport à la forme centrale\r\n\r\n*defaut css style:*\r\n\r\n### Rendu de l'objet\r\n**code:**\r\n```\r\nvar affichenBar=new svgBar_ModelView({el: $(\"#Abar\"), model: nBar });\r\n```\r\n**description:**\r\n* el: -->\tsvg element, où dessiner le texte\r\n* model: -->\tobjet model\r\n\r\n**Exemple:**\r\n```\r\n//on creer le code svg et on lui affecte id= Abar\r\nd3.select(\"#mbar\").append(\"svg\").attr(\"id\",\"Abar\");\t\r\n\r\n// on creer un objet svgBar\r\nvar nBar=new svgBar_Model({\tid : \"testBar\", \r\n\t\t\t\ttype: \"jsBarTopBottom\",\r\n\t\t\t\tx: 10,\r\n\t\t\t\ty: 50,\r\n\t\t\t\tsize: 100,\r\n\t\t\t\tthickness: 50,\r\n\t\t\t\tsvgBar_label:  {\r\n\t\t\t\t\t\"text\":\"Label\",\r\n\t\t\t\t\t\"dx\": 0,\r\n\t\t\t\t\t\"dy\": 0\r\n\t\t\t\t},\r\n\t\t\t\tsvgBar_label_position: \"centerMiddle\",\r\n\t\t\t\tsvgBar_rect:  \t{ \t\r\n\t\t\t\t\t\"style\":\"cssdrawZone1\"\r\n\t\t\t\t},\r\n\t\t\t\tsvgBar_value:  {\r\n\t\t\t\t\ttext: 10,\r\n\t\t\t\t\t\"dx\": 0,\r\n\t\t\t\t\t\"dy\": -5\r\n\t\t\t\t},\r\n\t\t\t\tsvgBar_value_position: \"topMiddle\",\r\n\t\t});\r\n\r\n//on affiche l'objet nBar à l'emplacement Abar\r\nvar affichenBar=new svgBar_ModelView({el: $(\"#Abar\"), model: nBar });\r\n```\t\r\n\r\nPosition des textes par rapport à la forme centrale:\r\nleft, middle, right\r\ntop\r\ncenter\r\nbottom\r\n\r\n \r\n## svgHisto\r\n### Structure de l'objet svgHisto\r\n**code:**\r\n```\r\nvar myHisto2=new svgHisto_Model({\t\r\n\tid : \"histoBar2\",\r\n\ttype: \"bottomup\",\r\n\tx: 100,\r\n\ty: 50,\r\n\tw: 200,\r\n\th: 300,\r\n\tinterBar: 5,\r\n\tdata: mdata,\r\n\tlabelKey: \"dateExtraction\",\r\n\tvalueKey: \"Effectif_reel\",\r\n\tsvgBar_Style:{\t\r\n\t\tid : \"testBar\", \r\n\t\ttype: \"jsBarTopBottom\",\r\n\t\tx: 10,\r\n\t\ty: 50,\r\n\t\tsize: 100,\r\n\t\tthickness: 50,\r\n\t\tsvgBar_label:  {\r\n\t\t\t\"text\":\"Label\",\r\n\t\t\t\"dx\": 0,\r\n\t\t\t\"dy\": 0\r\n\t\t\t},\r\n\t\tsvgBar_label_position: \"centerMiddle\",\r\n\t\tsvgBar_rect:  \t{ \t\r\n\t\t\t\"style\":\"cssdrawZone1\"\r\n\t\t\t},\r\n\t\tsvgBar_value:  {\r\n\t\t\ttext: 10,\r\n\t\t\t\"dx\": 0,\r\n\t\t\t\"dy\": -5\r\n\t\t\t},\r\n\t\tsvgBar_value_position: \"topMiddle\",\r\n\t\t});\r\n```\r\n**description:**\r\n* id : \"\",-->\tid de l'objet histogramme\r\n* type: \"\", -->\ttype d'histogramme topDown, bottomUp, leftRight, rightLeft\r\n* x: 0, -->\tposition horizontale de l'histogramme\r\n* y: 0, -->\tposition verticale de l'histogramme\r\n* w: 0, -->\tlargeur de l'histogramme\r\n* h: 0, -->\thauteur de l'histogramme\r\n* interBar: 5,-->\tespace entre les bars\r\n* data:, -->\ttable de donnée\r\n* labelKey: \"\",-->\tclé de la table contenant les titres\r\n* valueKey: \"\",-->\tclé de la table contenant les valeurs\r\n* svgBar_Style: -->\tsvgBar objet ou structure JSON de svgBar\r\n\r\n**defaut css style:**\r\n```\r\naucun\r\n```\r\n### Rendu de l'objet\r\n**code:**\r\n```\r\nvar affichenBar=new svgBar_ModelView({el: $(\"#Abar\"), model: nBar });\r\n```\r\n**description:**\r\n* el: \t-->\tsvg element, où dessiner le texte\r\n* model: \t-->\tobjet model\r\n\r\n**exemple:**\r\n```\r\n//on creer le code svg et on lui affecte id= Histo2\r\nd3.select(\"#mright\").append(\"svg\").attr(\"id\",\"Histo2\");\r\n\t\t\t\t\r\n// on creer un objet svgHisto\r\nvar myHisto2=new svgHisto_Model({\t\r\n\tid : \"histoBar2\",\r\n\ttype: \"bottomup\",\r\n\tx: 100,\r\n\ty: 50,\r\n\tw: 200,\r\n\th: 300,\r\n\tinterBar: 5,\r\n\tdata: mdata,\r\n\tlabelKey: \"dateExtraction\",\r\n\tvalueKey: \"Effectif_reel\",\r\n\tsvgBar_Style:{\t\r\n\t\tid : \"testBar\", \r\n\t\ttype: \"jsBarTopBottom\",\r\n\t\tx: 10,\r\n\t\ty: 50,\r\n\t\tsize: 100,\r\n\t\tthickness: 50,\r\n\t\tsvgBar_label:  {\r\n\t\t\t\"text\":\"Label\",\r\n\t\t\t\"dx\": 0,\r\n\t\t\t\"dy\": 0\r\n\t\t\t},\r\n\t\tsvgBar_label_position: \"centerMiddle\",\r\n\t\tsvgBar_rect:  \t{ \t\r\n\t\t\t\"style\":\"cssdrawZone1\"\r\n\t\t\t},\r\n\t\tsvgBar_value:  {\r\n\t\t\ttext: 10,\r\n\t\t\t\"dx\": 0,\r\n\t\t\t\"dy\": -5\r\n\t\t\t},\r\n\t\tsvgBar_value_position: \"topMiddle\",\r\n\t\t});\r\n\r\n//on affiche l'objet myHisto2 à l'emplacement Histo2\r\nvar myView=new svgHisto_ModelView({el: $(\"#Histo2\"), model: myHisto2});\r\n```","google":""}